How did viewing a diff between two versions of a file help you see the bug that was introduced?

it helps find spots of interest in a file.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

How can you use the commands git log and git diff to view the history of files?

How might using version control make you more confident to make changes that could break something?

Now that you have your workspace set up, what do you want to ttry using Git for?

what are some situations when branches would be helpful in keeping your history organized?
How would branches help?

How do the diagrams help you visualize the brance structure?

What is the result of merging two branches together?Why do we represent it in the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges manually?

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

What is the benefit of having a copy of the last known state of the remote stored locally?


